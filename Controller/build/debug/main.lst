ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_GPIO_Init:
  27              	.LFB140:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include "stm32f4xx.h"
  26:Core/Src/main.c **** #include "stm32f4xx_hal.h"
  27:Core/Src/main.c **** #include "lcd_stm32f4.h"
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** #include <string.h>
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 2


  32:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  33:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  34:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  35:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_ch1;
  36:Core/Src/main.c **** UART_HandleTypeDef huart1;
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** // TODO: Equation to calculate TIM2_Ticks
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PV */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  46:Core/Src/main.c **** void SystemClock_Config(void);
  47:Core/Src/main.c **** static void MX_GPIO_Init(void);
  48:Core/Src/main.c **** static void MX_DMA_Init(void);
  49:Core/Src/main.c **** static void UART1_Init(void);
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /**
  61:Core/Src/main.c ****   * @brief  The application entry point.
  62:Core/Src/main.c ****   * @retval int
  63:Core/Src/main.c ****   */
  64:Core/Src/main.c **** int main(void)
  65:Core/Src/main.c **** {
  66:Core/Src/main.c **** 
  67:Core/Src/main.c ****   
  68:Core/Src/main.c ****   HAL_Init();
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   SystemClock_Config();
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   MX_GPIO_Init();
  73:Core/Src/main.c ****   MX_DMA_Init();
  74:Core/Src/main.c ****   UART1_Init();
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   init_LCD();
  77:Core/Src/main.c ****   lcd_command(CLEAR);
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   while (1)
  81:Core/Src/main.c ****   {
  82:Core/Src/main.c ****     
  83:Core/Src/main.c ****   
  84:Core/Src/main.c ****   }
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** }
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /**
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 3


  89:Core/Src/main.c ****   * @brief System Clock Configuration
  90:Core/Src/main.c ****   * @retval None
  91:Core/Src/main.c ****   */
  92:Core/Src/main.c **** void SystemClock_Config(void)
  93:Core/Src/main.c **** {
  94:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  95:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
  98:Core/Src/main.c ****   */
  99:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 100:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 103:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 104:Core/Src/main.c ****   */
 105:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 106:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 107:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 108:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 109:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 110:Core/Src/main.c ****   {
 111:Core/Src/main.c ****     Error_Handler();
 112:Core/Src/main.c ****   }
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 115:Core/Src/main.c ****   */
 116:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 117:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 118:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 119:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 120:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 121:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 124:Core/Src/main.c ****   {
 125:Core/Src/main.c ****     Error_Handler();
 126:Core/Src/main.c ****   }
 127:Core/Src/main.c **** }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** /**
 132:Core/Src/main.c ****   * Enable DMA controller clock
 133:Core/Src/main.c ****   */
 134:Core/Src/main.c **** static void MX_DMA_Init(void)
 135:Core/Src/main.c **** {
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /* DMA controller clock enable */
 138:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* DMA interrupt init */
 141:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 142:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 143:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 144:Core/Src/main.c **** 
 145:Core/Src/main.c **** }
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** /**
 148:Core/Src/main.c ****   * @brief GPIO Initialization Function
 149:Core/Src/main.c ****   * @param None
 150:Core/Src/main.c ****   * @retval None
 151:Core/Src/main.c ****   */
 152:Core/Src/main.c **** static void MX_GPIO_Init(void)
 153:Core/Src/main.c **** {
  28              		.loc 1 153 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 89B0     		sub	sp, sp, #36
  44              		.cfi_def_cfa_offset 72
 154:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  45              		.loc 1 154 3 view .LVU1
  46              		.loc 1 154 20 is_stmt 0 view .LVU2
  47 0006 03AD     		add	r5, sp, #12
  48 0008 0024     		movs	r4, #0
  49 000a 0394     		str	r4, [sp, #12]
  50 000c 0494     		str	r4, [sp, #16]
  51 000e 0594     		str	r4, [sp, #20]
  52 0010 0694     		str	r4, [sp, #24]
  53 0012 0794     		str	r4, [sp, #28]
 155:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 160:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  54              		.loc 1 160 3 is_stmt 1 view .LVU3
  55              	.LBB4:
  56              		.loc 1 160 3 view .LVU4
  57 0014 0094     		str	r4, [sp]
  58              		.loc 1 160 3 view .LVU5
  59 0016 494B     		ldr	r3, .L3
  60 0018 1A6B     		ldr	r2, [r3, #48]
  61 001a 42F08002 		orr	r2, r2, #128
  62 001e 1A63     		str	r2, [r3, #48]
  63              		.loc 1 160 3 view .LVU6
  64 0020 1A6B     		ldr	r2, [r3, #48]
  65 0022 02F08002 		and	r2, r2, #128
  66 0026 0092     		str	r2, [sp]
  67              		.loc 1 160 3 view .LVU7
  68 0028 009A     		ldr	r2, [sp]
  69              	.LBE4:
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 5


  70              		.loc 1 160 3 view .LVU8
 161:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  71              		.loc 1 161 3 view .LVU9
  72              	.LBB5:
  73              		.loc 1 161 3 view .LVU10
  74 002a 0194     		str	r4, [sp, #4]
  75              		.loc 1 161 3 view .LVU11
  76 002c 1A6B     		ldr	r2, [r3, #48]
  77 002e 42F00102 		orr	r2, r2, #1
  78 0032 1A63     		str	r2, [r3, #48]
  79              		.loc 1 161 3 view .LVU12
  80 0034 1A6B     		ldr	r2, [r3, #48]
  81 0036 02F00102 		and	r2, r2, #1
  82 003a 0192     		str	r2, [sp, #4]
  83              		.loc 1 161 3 view .LVU13
  84 003c 019A     		ldr	r2, [sp, #4]
  85              	.LBE5:
  86              		.loc 1 161 3 view .LVU14
 162:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  87              		.loc 1 162 3 view .LVU15
  88              	.LBB6:
  89              		.loc 1 162 3 view .LVU16
  90 003e 0294     		str	r4, [sp, #8]
  91              		.loc 1 162 3 view .LVU17
  92 0040 1A6B     		ldr	r2, [r3, #48]
  93 0042 42F00202 		orr	r2, r2, #2
  94 0046 1A63     		str	r2, [r3, #48]
  95              		.loc 1 162 3 view .LVU18
  96 0048 1B6B     		ldr	r3, [r3, #48]
  97 004a 03F00203 		and	r3, r3, #2
  98 004e 0293     		str	r3, [sp, #8]
  99              		.loc 1 162 3 view .LVU19
 100 0050 029B     		ldr	r3, [sp, #8]
 101              	.LBE6:
 102              		.loc 1 162 3 view .LVU20
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   // -------------------------------
 165:Core/Src/main.c ****   // LCD pins configuration
 166:Core/Src/main.c ****   // -------------------------------
 167:Core/Src/main.c ****   // Configure PC14 (RS) and PC15 (E) as output push-pull
 168:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_14 | GPIO_PIN_15;
 103              		.loc 1 168 3 view .LVU21
 104              		.loc 1 168 23 is_stmt 0 view .LVU22
 105 0052 4FF4404B 		mov	fp, #49152
 106 0056 CDF80CB0 		str	fp, [sp, #12]
 169:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 107              		.loc 1 169 3 is_stmt 1 view .LVU23
 108              		.loc 1 169 24 is_stmt 0 view .LVU24
 109 005a 4FF00108 		mov	r8, #1
 110 005e CDF81080 		str	r8, [sp, #16]
 170:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 111              		.loc 1 170 3 is_stmt 1 view .LVU25
 171:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 112              		.loc 1 171 3 view .LVU26
 172:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 113              		.loc 1 172 3 view .LVU27
 114 0062 2946     		mov	r1, r5
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 6


 115 0064 3648     		ldr	r0, .L3+4
 116 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 117              	.LVL0:
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   // Configure PB8 (D4) and PB9 (D5) as output push-pull
 175:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8 | GPIO_PIN_9;
 118              		.loc 1 175 3 view .LVU28
 119              		.loc 1 175 23 is_stmt 0 view .LVU29
 120 006a 4FF44079 		mov	r9, #768
 121 006e CDF80C90 		str	r9, [sp, #12]
 176:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 122              		.loc 1 176 3 is_stmt 1 view .LVU30
 123 0072 344E     		ldr	r6, .L3+8
 124 0074 2946     		mov	r1, r5
 125 0076 3046     		mov	r0, r6
 126 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 127              	.LVL1:
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   // Configure PA12 (D6) and PA15 (D7) as output push-pull
 179:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12 | GPIO_PIN_15;
 128              		.loc 1 179 3 view .LVU31
 129              		.loc 1 179 23 is_stmt 0 view .LVU32
 130 007c 4FF4104A 		mov	r10, #36864
 131 0080 CDF80CA0 		str	r10, [sp, #12]
 180:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 132              		.loc 1 180 3 is_stmt 1 view .LVU33
 133 0084 304F     		ldr	r7, .L3+12
 134 0086 2946     		mov	r1, r5
 135 0088 3846     		mov	r0, r7
 136 008a FFF7FEFF 		bl	HAL_GPIO_Init
 137              	.LVL2:
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   // Set all LCD pins LOW initially
 183:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14 | GPIO_PIN_15, GPIO_PIN_RESET);
 138              		.loc 1 183 3 view .LVU34
 139 008e 2246     		mov	r2, r4
 140 0090 5946     		mov	r1, fp
 141 0092 2B48     		ldr	r0, .L3+4
 142 0094 FFF7FEFF 		bl	HAL_GPIO_WritePin
 143              	.LVL3:
 184:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8 | GPIO_PIN_9, GPIO_PIN_RESET);
 144              		.loc 1 184 3 view .LVU35
 145 0098 2246     		mov	r2, r4
 146 009a 4946     		mov	r1, r9
 147 009c 3046     		mov	r0, r6
 148 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 149              	.LVL4:
 185:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_12 | GPIO_PIN_15, GPIO_PIN_RESET);
 150              		.loc 1 185 3 view .LVU36
 151 00a2 2246     		mov	r2, r4
 152 00a4 5146     		mov	r1, r10
 153 00a6 3846     		mov	r0, r7
 154 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 155              	.LVL5:
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   // -------------------------------
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 7


 189:Core/Src/main.c ****   // Button0 configuration (PA0)
 190:Core/Src/main.c ****   // -------------------------------
 191:Core/Src/main.c ****   GPIO_InitStruct.Pin = Button0_Pin;
 156              		.loc 1 191 3 view .LVU37
 157              		.loc 1 191 23 is_stmt 0 view .LVU38
 158 00ac CDF80C80 		str	r8, [sp, #12]
 192:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING; // Interrupt on rising edge
 159              		.loc 1 192 3 is_stmt 1 view .LVU39
 160              		.loc 1 192 24 is_stmt 0 view .LVU40
 161 00b0 4FF48813 		mov	r3, #1114112
 162 00b4 0493     		str	r3, [sp, #16]
 193:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;         // Use pull-up resistor
 163              		.loc 1 193 3 is_stmt 1 view .LVU41
 164              		.loc 1 193 24 is_stmt 0 view .LVU42
 165 00b6 CDF81480 		str	r8, [sp, #20]
 194:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 166              		.loc 1 194 3 is_stmt 1 view .LVU43
 167 00ba 2946     		mov	r1, r5
 168 00bc 3846     		mov	r0, r7
 169 00be FFF7FEFF 		bl	HAL_GPIO_Init
 170              	.LVL6:
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   // Enable and set EXTI line 0 interrupt priority
 197:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 2, 0);
 171              		.loc 1 197 3 view .LVU44
 172 00c2 2246     		mov	r2, r4
 173 00c4 0221     		movs	r1, #2
 174 00c6 0620     		movs	r0, #6
 175 00c8 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 176              	.LVL7:
 198:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 177              		.loc 1 198 3 view .LVU45
 178 00cc 0620     		movs	r0, #6
 179 00ce FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 180              	.LVL8:
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   // Configure PC0, PC1, PC2, PC3 as inputs with interrupts
 201:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3;
 181              		.loc 1 201 3 view .LVU46
 182              		.loc 1 201 23 is_stmt 0 view .LVU47
 183 00d2 0F23     		movs	r3, #15
 184 00d4 0393     		str	r3, [sp, #12]
 202:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;  // Interrupt on falling edge (button press)
 185              		.loc 1 202 3 is_stmt 1 view .LVU48
 186              		.loc 1 202 24 is_stmt 0 view .LVU49
 187 00d6 4FF40413 		mov	r3, #2162688
 188 00da 0493     		str	r3, [sp, #16]
 203:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;            // Enable internal pull-up resistor
 189              		.loc 1 203 3 is_stmt 1 view .LVU50
 190              		.loc 1 203 24 is_stmt 0 view .LVU51
 191 00dc CDF81480 		str	r8, [sp, #20]
 204:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 192              		.loc 1 204 3 is_stmt 1 view .LVU52
 193              		.loc 1 204 25 is_stmt 0 view .LVU53
 194 00e0 0694     		str	r4, [sp, #24]
 205:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 195              		.loc 1 205 3 is_stmt 1 view .LVU54
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 8


 196 00e2 2946     		mov	r1, r5
 197 00e4 3846     		mov	r0, r7
 198 00e6 FFF7FEFF 		bl	HAL_GPIO_Init
 199              	.LVL9:
 206:Core/Src/main.c ****     
 207:Core/Src/main.c ****   // Enable and set EXTI line interrupts
 208:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 2, 0);  // SW0 on PC0
 200              		.loc 1 208 3 view .LVU55
 201 00ea 2246     		mov	r2, r4
 202 00ec 0221     		movs	r1, #2
 203 00ee 0620     		movs	r0, #6
 204 00f0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 205              	.LVL10:
 209:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 206              		.loc 1 209 3 view .LVU56
 207 00f4 0620     		movs	r0, #6
 208 00f6 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 209              	.LVL11:
 210:Core/Src/main.c ****     
 211:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI1_IRQn, 2, 0);  // SW1 on PC1
 210              		.loc 1 211 3 view .LVU57
 211 00fa 2246     		mov	r2, r4
 212 00fc 0221     		movs	r1, #2
 213 00fe 0720     		movs	r0, #7
 214 0100 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 215              	.LVL12:
 212:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 216              		.loc 1 212 3 view .LVU58
 217 0104 0720     		movs	r0, #7
 218 0106 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 219              	.LVL13:
 213:Core/Src/main.c ****     
 214:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI2_IRQn, 2, 0);  // SW2 on PC2
 220              		.loc 1 214 3 view .LVU59
 221 010a 2246     		mov	r2, r4
 222 010c 0221     		movs	r1, #2
 223 010e 0820     		movs	r0, #8
 224 0110 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 225              	.LVL14:
 215:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 226              		.loc 1 215 3 view .LVU60
 227 0114 0820     		movs	r0, #8
 228 0116 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 229              	.LVL15:
 216:Core/Src/main.c ****     
 217:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI3_IRQn, 2, 0);  // SW3 on PC3
 230              		.loc 1 217 3 view .LVU61
 231 011a 2246     		mov	r2, r4
 232 011c 0221     		movs	r1, #2
 233 011e 0920     		movs	r0, #9
 234 0120 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 235              	.LVL16:
 218:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 236              		.loc 1 218 3 view .LVU62
 237 0124 0920     		movs	r0, #9
 238 0126 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 239              	.LVL17:
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 9


 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   GPIOB->MODER = 0x5555;
 240              		.loc 1 220 3 view .LVU63
 241              		.loc 1 220 16 is_stmt 0 view .LVU64
 242 012a 45F25553 		movw	r3, #21845
 243 012e 3360     		str	r3, [r6]
 221:Core/Src/main.c ****   GPIOB->ODR = 0xFF;
 244              		.loc 1 221 3 is_stmt 1 view .LVU65
 245              		.loc 1 221 14 is_stmt 0 view .LVU66
 246 0130 FF23     		movs	r3, #255
 247 0132 7361     		str	r3, [r6, #20]
 222:Core/Src/main.c **** }
 248              		.loc 1 222 1 view .LVU67
 249 0134 09B0     		add	sp, sp, #36
 250              		.cfi_def_cfa_offset 36
 251              		@ sp needed
 252 0136 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 253              	.L4:
 254 013a 00BF     		.align	2
 255              	.L3:
 256 013c 00380240 		.word	1073887232
 257 0140 00080240 		.word	1073874944
 258 0144 00040240 		.word	1073873920
 259 0148 00000240 		.word	1073872896
 260              		.cfi_endproc
 261              	.LFE140:
 263              		.section	.text.MX_DMA_Init,"ax",%progbits
 264              		.align	1
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 269              	MX_DMA_Init:
 270              	.LFB139:
 135:Core/Src/main.c **** 
 271              		.loc 1 135 1 is_stmt 1 view -0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 8
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275 0000 00B5     		push	{lr}
 276              		.cfi_def_cfa_offset 4
 277              		.cfi_offset 14, -4
 278 0002 83B0     		sub	sp, sp, #12
 279              		.cfi_def_cfa_offset 16
 138:Core/Src/main.c **** 
 280              		.loc 1 138 3 view .LVU69
 281              	.LBB7:
 138:Core/Src/main.c **** 
 282              		.loc 1 138 3 view .LVU70
 283 0004 0021     		movs	r1, #0
 284 0006 0191     		str	r1, [sp, #4]
 138:Core/Src/main.c **** 
 285              		.loc 1 138 3 view .LVU71
 286 0008 094B     		ldr	r3, .L7
 287 000a 1A6B     		ldr	r2, [r3, #48]
 288 000c 42F40012 		orr	r2, r2, #2097152
 289 0010 1A63     		str	r2, [r3, #48]
 138:Core/Src/main.c **** 
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 10


 290              		.loc 1 138 3 view .LVU72
 291 0012 1B6B     		ldr	r3, [r3, #48]
 292 0014 03F40013 		and	r3, r3, #2097152
 293 0018 0193     		str	r3, [sp, #4]
 138:Core/Src/main.c **** 
 294              		.loc 1 138 3 view .LVU73
 295 001a 019B     		ldr	r3, [sp, #4]
 296              	.LBE7:
 138:Core/Src/main.c **** 
 297              		.loc 1 138 3 view .LVU74
 142:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 298              		.loc 1 142 3 view .LVU75
 299 001c 0A46     		mov	r2, r1
 300 001e 1020     		movs	r0, #16
 301 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 302              	.LVL18:
 143:Core/Src/main.c **** 
 303              		.loc 1 143 3 view .LVU76
 304 0024 1020     		movs	r0, #16
 305 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 306              	.LVL19:
 145:Core/Src/main.c **** 
 307              		.loc 1 145 1 is_stmt 0 view .LVU77
 308 002a 03B0     		add	sp, sp, #12
 309              		.cfi_def_cfa_offset 4
 310              		@ sp needed
 311 002c 5DF804FB 		ldr	pc, [sp], #4
 312              	.L8:
 313              		.align	2
 314              	.L7:
 315 0030 00380240 		.word	1073887232
 316              		.cfi_endproc
 317              	.LFE139:
 319              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 320              		.align	1
 321              		.global	EXTI0_IRQHandler
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 326              	EXTI0_IRQHandler:
 327              	.LFB141:
 223:Core/Src/main.c **** 
 224:Core/Src/main.c **** void EXTI0_IRQHandler(void)
 225:Core/Src/main.c **** {
 328              		.loc 1 225 1 is_stmt 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332 0000 08B5     		push	{r3, lr}
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 3, -8
 335              		.cfi_offset 14, -4
 226:Core/Src/main.c ****     HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 336              		.loc 1 226 5 view .LVU79
 337 0002 0120     		movs	r0, #1
 338 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 339              	.LVL20:
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 11


 227:Core/Src/main.c **** }
 340              		.loc 1 227 1 is_stmt 0 view .LVU80
 341 0008 08BD     		pop	{r3, pc}
 342              		.cfi_endproc
 343              	.LFE141:
 345              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 346              		.align	1
 347              		.global	EXTI1_IRQHandler
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 352              	EXTI1_IRQHandler:
 353              	.LFB142:
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** void EXTI1_IRQHandler(void)
 230:Core/Src/main.c **** {
 354              		.loc 1 230 1 is_stmt 1 view -0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358 0000 08B5     		push	{r3, lr}
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 3, -8
 361              		.cfi_offset 14, -4
 231:Core/Src/main.c ****     HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
 362              		.loc 1 231 5 view .LVU82
 363 0002 0220     		movs	r0, #2
 364 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 365              	.LVL21:
 232:Core/Src/main.c **** }
 366              		.loc 1 232 1 is_stmt 0 view .LVU83
 367 0008 08BD     		pop	{r3, pc}
 368              		.cfi_endproc
 369              	.LFE142:
 371              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 372              		.align	1
 373              		.global	EXTI2_IRQHandler
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 378              	EXTI2_IRQHandler:
 379              	.LFB143:
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** void EXTI2_IRQHandler(void)
 235:Core/Src/main.c **** {
 380              		.loc 1 235 1 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384 0000 08B5     		push	{r3, lr}
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 3, -8
 387              		.cfi_offset 14, -4
 236:Core/Src/main.c ****     HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_2);
 388              		.loc 1 236 5 view .LVU85
 389 0002 0420     		movs	r0, #4
 390 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 12


 391              	.LVL22:
 237:Core/Src/main.c **** }
 392              		.loc 1 237 1 is_stmt 0 view .LVU86
 393 0008 08BD     		pop	{r3, pc}
 394              		.cfi_endproc
 395              	.LFE143:
 397              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 398              		.align	1
 399              		.global	EXTI3_IRQHandler
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 404              	EXTI3_IRQHandler:
 405              	.LFB144:
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** void EXTI3_IRQHandler(void)
 240:Core/Src/main.c **** {
 406              		.loc 1 240 1 is_stmt 1 view -0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410 0000 08B5     		push	{r3, lr}
 411              		.cfi_def_cfa_offset 8
 412              		.cfi_offset 3, -8
 413              		.cfi_offset 14, -4
 241:Core/Src/main.c ****     HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 414              		.loc 1 241 5 view .LVU88
 415 0002 0820     		movs	r0, #8
 416 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 417              	.LVL23:
 242:Core/Src/main.c **** }
 418              		.loc 1 242 1 is_stmt 0 view .LVU89
 419 0008 08BD     		pop	{r3, pc}
 420              		.cfi_endproc
 421              	.LFE144:
 423              		.section	.rodata.HAL_GPIO_EXTI_Callback.str1.4,"aMS",%progbits,1
 424              		.align	2
 425              	.LC0:
 426 0000 42544E30 		.ascii	"BTN0\015\012\000"
 426      0D0A00
 427 0007 00       		.align	2
 428              	.LC1:
 429 0008 42544E31 		.ascii	"BTN1\015\012\000"
 429      0D0A00
 430 000f 00       		.align	2
 431              	.LC2:
 432 0010 42544E32 		.ascii	"BTN2\015\012\000"
 432      0D0A00
 433 0017 00       		.align	2
 434              	.LC3:
 435 0018 42544E33 		.ascii	"BTN3\015\012\000"
 435      0D0A00
 436              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 437              		.align	1
 438              		.global	HAL_GPIO_EXTI_Callback
 439              		.syntax unified
 440              		.thumb
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 13


 441              		.thumb_func
 443              	HAL_GPIO_EXTI_Callback:
 444              	.LVL24:
 445              	.LFB145:
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** uint32_t lastInterruptTime[4] = {0};
 245:Core/Src/main.c **** #define DEBOUNCE_DELAY 200  // 200ms debounce
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 248:Core/Src/main.c **** {
 446              		.loc 1 248 1 is_stmt 1 view -0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 8
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		.loc 1 248 1 is_stmt 0 view .LVU91
 451 0000 10B5     		push	{r4, lr}
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 4, -8
 454              		.cfi_offset 14, -4
 455 0002 82B0     		sub	sp, sp, #8
 456              		.cfi_def_cfa_offset 16
 457 0004 0446     		mov	r4, r0
 249:Core/Src/main.c ****     uint32_t currentTime = HAL_GetTick();
 458              		.loc 1 249 5 is_stmt 1 view .LVU92
 459              		.loc 1 249 28 is_stmt 0 view .LVU93
 460 0006 FFF7FEFF 		bl	HAL_GetTick
 461              	.LVL25:
 250:Core/Src/main.c ****     
 251:Core/Src/main.c ****     switch(GPIO_Pin)
 462              		.loc 1 251 5 is_stmt 1 view .LVU94
 463 000a 631E     		subs	r3, r4, #1
 464 000c 072B     		cmp	r3, #7
 465 000e 0AD8     		bhi	.L17
 466 0010 DFE803F0 		tbb	[pc, r3]
 467              	.L20:
 468 0014 04       		.byte	(.L23-.L20)/2
 469 0015 21       		.byte	(.L22-.L20)/2
 470 0016 09       		.byte	(.L17-.L20)/2
 471 0017 3C       		.byte	(.L21-.L20)/2
 472 0018 09       		.byte	(.L17-.L20)/2
 473 0019 09       		.byte	(.L17-.L20)/2
 474 001a 09       		.byte	(.L17-.L20)/2
 475 001b 57       		.byte	(.L19-.L20)/2
 476              		.p2align 1
 477              	.L23:
 252:Core/Src/main.c ****     {
 253:Core/Src/main.c ****         case GPIO_PIN_0:  // SW0
 254:Core/Src/main.c ****             if((currentTime - lastInterruptTime[0]) > DEBOUNCE_DELAY)
 478              		.loc 1 254 13 view .LVU95
 479              		.loc 1 254 48 is_stmt 0 view .LVU96
 480 001c 364B     		ldr	r3, .L27
 481 001e 1B68     		ldr	r3, [r3]
 482              		.loc 1 254 29 view .LVU97
 483 0020 C31A     		subs	r3, r0, r3
 484              		.loc 1 254 15 view .LVU98
 485 0022 C82B     		cmp	r3, #200
 486 0024 01D8     		bhi	.L26
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 14


 487              	.LVL26:
 488              	.L17:
 255:Core/Src/main.c ****             {
 256:Core/Src/main.c ****                 lastInterruptTime[3] = currentTime;
 257:Core/Src/main.c ****                 char msg[] = "BTN0\r\n";
 258:Core/Src/main.c ****                 HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 259:Core/Src/main.c ****             }
 260:Core/Src/main.c ****             break;
 261:Core/Src/main.c ****             
 262:Core/Src/main.c ****         case GPIO_PIN_1:  // SW1
 263:Core/Src/main.c ****             if((currentTime - lastInterruptTime[1]) > DEBOUNCE_DELAY)
 264:Core/Src/main.c ****             {
 265:Core/Src/main.c ****                 lastInterruptTime[3] = currentTime;
 266:Core/Src/main.c ****                 char msg[] = "BTN1\r\n";
 267:Core/Src/main.c ****                 HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 268:Core/Src/main.c ****             }
 269:Core/Src/main.c ****             break;
 270:Core/Src/main.c ****             
 271:Core/Src/main.c ****         case GPIO_PIN_2:  // SW2
 272:Core/Src/main.c ****             if((currentTime - lastInterruptTime[2]) > DEBOUNCE_DELAY)
 273:Core/Src/main.c ****             {
 274:Core/Src/main.c ****                 lastInterruptTime[3] = currentTime;
 275:Core/Src/main.c ****                 char msg[] = "BTN2\r\n";
 276:Core/Src/main.c ****                 HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 277:Core/Src/main.c ****             }
 278:Core/Src/main.c ****             break;
 279:Core/Src/main.c ****             
 280:Core/Src/main.c ****         case GPIO_PIN_3:  // SW3
 281:Core/Src/main.c ****             if((currentTime - lastInterruptTime[3]) > DEBOUNCE_DELAY)
 282:Core/Src/main.c ****             {
 283:Core/Src/main.c ****                 lastInterruptTime[3] = currentTime;
 284:Core/Src/main.c ****                 char msg[] = "BTN3\r\n";
 285:Core/Src/main.c ****                 HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 286:Core/Src/main.c ****             }
 287:Core/Src/main.c ****             break;
 288:Core/Src/main.c ****     }
 289:Core/Src/main.c **** }
 489              		.loc 1 289 1 view .LVU99
 490 0026 02B0     		add	sp, sp, #8
 491              		.cfi_remember_state
 492              		.cfi_def_cfa_offset 8
 493              		@ sp needed
 494 0028 10BD     		pop	{r4, pc}
 495              	.LVL27:
 496              	.L26:
 497              		.cfi_restore_state
 498              	.LBB8:
 256:Core/Src/main.c ****                 char msg[] = "BTN0\r\n";
 499              		.loc 1 256 17 is_stmt 1 view .LVU100
 256:Core/Src/main.c ****                 char msg[] = "BTN0\r\n";
 500              		.loc 1 256 38 is_stmt 0 view .LVU101
 501 002a 334B     		ldr	r3, .L27
 502 002c D860     		str	r0, [r3, #12]
 257:Core/Src/main.c ****                 HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 503              		.loc 1 257 17 is_stmt 1 view .LVU102
 257:Core/Src/main.c ****                 HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 504              		.loc 1 257 22 is_stmt 0 view .LVU103
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 15


 505 002e 334B     		ldr	r3, .L27+4
 506 0030 93E80300 		ldm	r3, {r0, r1}
 507              	.LVL28:
 257:Core/Src/main.c ****                 HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 508              		.loc 1 257 22 view .LVU104
 509 0034 0090     		str	r0, [sp]
 510 0036 ADF80410 		strh	r1, [sp, #4]	@ movhi
 511 003a 090C     		lsrs	r1, r1, #16
 512 003c 8DF80610 		strb	r1, [sp, #6]
 258:Core/Src/main.c ****             }
 513              		.loc 1 258 17 is_stmt 1 view .LVU105
 258:Core/Src/main.c ****             }
 514              		.loc 1 258 59 is_stmt 0 view .LVU106
 515 0040 6846     		mov	r0, sp
 516 0042 FFF7FEFF 		bl	strlen
 517              	.LVL29:
 258:Core/Src/main.c ****             }
 518              		.loc 1 258 17 discriminator 1 view .LVU107
 519 0046 4FF0FF33 		mov	r3, #-1
 520 004a 82B2     		uxth	r2, r0
 521 004c 6946     		mov	r1, sp
 522 004e 2C48     		ldr	r0, .L27+8
 523 0050 FFF7FEFF 		bl	HAL_UART_Transmit
 524              	.LVL30:
 525 0054 E7E7     		b	.L17
 526              	.LVL31:
 527              	.L22:
 258:Core/Src/main.c ****             }
 528              		.loc 1 258 17 discriminator 1 view .LVU108
 529              	.LBE8:
 263:Core/Src/main.c ****             {
 530              		.loc 1 263 13 is_stmt 1 view .LVU109
 263:Core/Src/main.c ****             {
 531              		.loc 1 263 48 is_stmt 0 view .LVU110
 532 0056 284B     		ldr	r3, .L27
 533 0058 5B68     		ldr	r3, [r3, #4]
 263:Core/Src/main.c ****             {
 534              		.loc 1 263 29 view .LVU111
 535 005a C31A     		subs	r3, r0, r3
 263:Core/Src/main.c ****             {
 536              		.loc 1 263 15 view .LVU112
 537 005c C82B     		cmp	r3, #200
 538 005e E2D9     		bls	.L17
 539              	.LBB9:
 265:Core/Src/main.c ****                 char msg[] = "BTN1\r\n";
 540              		.loc 1 265 17 is_stmt 1 view .LVU113
 265:Core/Src/main.c ****                 char msg[] = "BTN1\r\n";
 541              		.loc 1 265 38 is_stmt 0 view .LVU114
 542 0060 254B     		ldr	r3, .L27
 543 0062 D860     		str	r0, [r3, #12]
 266:Core/Src/main.c ****                 HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 544              		.loc 1 266 17 is_stmt 1 view .LVU115
 266:Core/Src/main.c ****                 HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 545              		.loc 1 266 22 is_stmt 0 view .LVU116
 546 0064 274B     		ldr	r3, .L27+12
 547 0066 93E80300 		ldm	r3, {r0, r1}
 548              	.LVL32:
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 16


 266:Core/Src/main.c ****                 HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 549              		.loc 1 266 22 view .LVU117
 550 006a 0090     		str	r0, [sp]
 551 006c ADF80410 		strh	r1, [sp, #4]	@ movhi
 552 0070 090C     		lsrs	r1, r1, #16
 553 0072 8DF80610 		strb	r1, [sp, #6]
 267:Core/Src/main.c ****             }
 554              		.loc 1 267 17 is_stmt 1 view .LVU118
 267:Core/Src/main.c ****             }
 555              		.loc 1 267 59 is_stmt 0 view .LVU119
 556 0076 6846     		mov	r0, sp
 557 0078 FFF7FEFF 		bl	strlen
 558              	.LVL33:
 267:Core/Src/main.c ****             }
 559              		.loc 1 267 17 discriminator 1 view .LVU120
 560 007c 4FF0FF33 		mov	r3, #-1
 561 0080 82B2     		uxth	r2, r0
 562 0082 6946     		mov	r1, sp
 563 0084 1E48     		ldr	r0, .L27+8
 564 0086 FFF7FEFF 		bl	HAL_UART_Transmit
 565              	.LVL34:
 566 008a CCE7     		b	.L17
 567              	.LVL35:
 568              	.L21:
 267:Core/Src/main.c ****             }
 569              		.loc 1 267 17 discriminator 1 view .LVU121
 570              	.LBE9:
 272:Core/Src/main.c ****             {
 571              		.loc 1 272 13 is_stmt 1 view .LVU122
 272:Core/Src/main.c ****             {
 572              		.loc 1 272 48 is_stmt 0 view .LVU123
 573 008c 1A4B     		ldr	r3, .L27
 574 008e 9B68     		ldr	r3, [r3, #8]
 272:Core/Src/main.c ****             {
 575              		.loc 1 272 29 view .LVU124
 576 0090 C31A     		subs	r3, r0, r3
 272:Core/Src/main.c ****             {
 577              		.loc 1 272 15 view .LVU125
 578 0092 C82B     		cmp	r3, #200
 579 0094 C7D9     		bls	.L17
 580              	.LBB10:
 274:Core/Src/main.c ****                 char msg[] = "BTN2\r\n";
 581              		.loc 1 274 17 is_stmt 1 view .LVU126
 274:Core/Src/main.c ****                 char msg[] = "BTN2\r\n";
 582              		.loc 1 274 38 is_stmt 0 view .LVU127
 583 0096 184B     		ldr	r3, .L27
 584 0098 D860     		str	r0, [r3, #12]
 275:Core/Src/main.c ****                 HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 585              		.loc 1 275 17 is_stmt 1 view .LVU128
 275:Core/Src/main.c ****                 HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 586              		.loc 1 275 22 is_stmt 0 view .LVU129
 587 009a 1B4B     		ldr	r3, .L27+16
 588 009c 93E80300 		ldm	r3, {r0, r1}
 589              	.LVL36:
 275:Core/Src/main.c ****                 HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 590              		.loc 1 275 22 view .LVU130
 591 00a0 0090     		str	r0, [sp]
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 17


 592 00a2 ADF80410 		strh	r1, [sp, #4]	@ movhi
 593 00a6 090C     		lsrs	r1, r1, #16
 594 00a8 8DF80610 		strb	r1, [sp, #6]
 276:Core/Src/main.c ****             }
 595              		.loc 1 276 17 is_stmt 1 view .LVU131
 276:Core/Src/main.c ****             }
 596              		.loc 1 276 59 is_stmt 0 view .LVU132
 597 00ac 6846     		mov	r0, sp
 598 00ae FFF7FEFF 		bl	strlen
 599              	.LVL37:
 276:Core/Src/main.c ****             }
 600              		.loc 1 276 17 discriminator 1 view .LVU133
 601 00b2 4FF0FF33 		mov	r3, #-1
 602 00b6 82B2     		uxth	r2, r0
 603 00b8 6946     		mov	r1, sp
 604 00ba 1148     		ldr	r0, .L27+8
 605 00bc FFF7FEFF 		bl	HAL_UART_Transmit
 606              	.LVL38:
 607 00c0 B1E7     		b	.L17
 608              	.LVL39:
 609              	.L19:
 276:Core/Src/main.c ****             }
 610              		.loc 1 276 17 discriminator 1 view .LVU134
 611              	.LBE10:
 281:Core/Src/main.c ****             {
 612              		.loc 1 281 13 is_stmt 1 view .LVU135
 281:Core/Src/main.c ****             {
 613              		.loc 1 281 48 is_stmt 0 view .LVU136
 614 00c2 0D4B     		ldr	r3, .L27
 615 00c4 DB68     		ldr	r3, [r3, #12]
 281:Core/Src/main.c ****             {
 616              		.loc 1 281 29 view .LVU137
 617 00c6 C31A     		subs	r3, r0, r3
 281:Core/Src/main.c ****             {
 618              		.loc 1 281 15 view .LVU138
 619 00c8 C82B     		cmp	r3, #200
 620 00ca ACD9     		bls	.L17
 621              	.LBB11:
 283:Core/Src/main.c ****                 char msg[] = "BTN3\r\n";
 622              		.loc 1 283 17 is_stmt 1 view .LVU139
 283:Core/Src/main.c ****                 char msg[] = "BTN3\r\n";
 623              		.loc 1 283 38 is_stmt 0 view .LVU140
 624 00cc 0A4B     		ldr	r3, .L27
 625 00ce D860     		str	r0, [r3, #12]
 284:Core/Src/main.c ****                 HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 626              		.loc 1 284 17 is_stmt 1 view .LVU141
 284:Core/Src/main.c ****                 HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 627              		.loc 1 284 22 is_stmt 0 view .LVU142
 628 00d0 0E4B     		ldr	r3, .L27+20
 629 00d2 93E80300 		ldm	r3, {r0, r1}
 630              	.LVL40:
 284:Core/Src/main.c ****                 HAL_UART_Transmit(&huart1, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 631              		.loc 1 284 22 view .LVU143
 632 00d6 0090     		str	r0, [sp]
 633 00d8 ADF80410 		strh	r1, [sp, #4]	@ movhi
 634 00dc 090C     		lsrs	r1, r1, #16
 635 00de 8DF80610 		strb	r1, [sp, #6]
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 18


 285:Core/Src/main.c ****             }
 636              		.loc 1 285 17 is_stmt 1 view .LVU144
 285:Core/Src/main.c ****             }
 637              		.loc 1 285 59 is_stmt 0 view .LVU145
 638 00e2 6846     		mov	r0, sp
 639 00e4 FFF7FEFF 		bl	strlen
 640              	.LVL41:
 285:Core/Src/main.c ****             }
 641              		.loc 1 285 17 discriminator 1 view .LVU146
 642 00e8 4FF0FF33 		mov	r3, #-1
 643 00ec 82B2     		uxth	r2, r0
 644 00ee 6946     		mov	r1, sp
 645 00f0 0348     		ldr	r0, .L27+8
 646 00f2 FFF7FEFF 		bl	HAL_UART_Transmit
 647              	.LVL42:
 648              	.LBE11:
 649              		.loc 1 289 1 view .LVU147
 650 00f6 96E7     		b	.L17
 651              	.L28:
 652              		.align	2
 653              	.L27:
 654 00f8 00000000 		.word	lastInterruptTime
 655 00fc 00000000 		.word	.LC0
 656 0100 00000000 		.word	huart1
 657 0104 08000000 		.word	.LC1
 658 0108 10000000 		.word	.LC2
 659 010c 18000000 		.word	.LC3
 660              		.cfi_endproc
 661              	.LFE145:
 663              		.section	.text.Error_Handler,"ax",%progbits
 664              		.align	1
 665              		.global	Error_Handler
 666              		.syntax unified
 667              		.thumb
 668              		.thumb_func
 670              	Error_Handler:
 671              	.LFB147:
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** void UART1_Init(void)
 292:Core/Src/main.c **** {
 293:Core/Src/main.c ****     // Enable clocks
 294:Core/Src/main.c ****     __HAL_RCC_USART1_CLK_ENABLE();
 295:Core/Src/main.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 296:Core/Src/main.c ****     
 297:Core/Src/main.c ****     // Configure GPIO pins for UART
 298:Core/Src/main.c ****     GPIO_InitTypeDef GPIO_InitStruct = {0};
 299:Core/Src/main.c ****     
 300:Core/Src/main.c ****     // PA9 -> USART1_TX
 301:Core/Src/main.c ****     // PA10 -> USART1_RX
 302:Core/Src/main.c ****     GPIO_InitStruct.Pin = GPIO_PIN_9 | GPIO_PIN_10;
 303:Core/Src/main.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 304:Core/Src/main.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 305:Core/Src/main.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 306:Core/Src/main.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 307:Core/Src/main.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 308:Core/Src/main.c ****     
 309:Core/Src/main.c ****     // Configure UART parameters
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 19


 310:Core/Src/main.c ****     huart1.Instance = USART1;
 311:Core/Src/main.c ****     huart1.Init.BaudRate = 115200;
 312:Core/Src/main.c ****     huart1.Init.WordLength = UART_WORDLENGTH_8B;
 313:Core/Src/main.c ****     huart1.Init.StopBits = UART_STOPBITS_1;
 314:Core/Src/main.c ****     huart1.Init.Parity = UART_PARITY_NONE;
 315:Core/Src/main.c ****     huart1.Init.Mode = UART_MODE_TX_RX;
 316:Core/Src/main.c ****     huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 317:Core/Src/main.c ****     huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 318:Core/Src/main.c ****     
 319:Core/Src/main.c ****     if (HAL_UART_Init(&huart1) != HAL_OK)
 320:Core/Src/main.c ****     {
 321:Core/Src/main.c ****         // Initialization Error
 322:Core/Src/main.c ****         Error_Handler();
 323:Core/Src/main.c ****     }
 324:Core/Src/main.c **** }
 325:Core/Src/main.c **** 
 326:Core/Src/main.c **** 
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** /**
 329:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 330:Core/Src/main.c ****   * @retval None
 331:Core/Src/main.c ****   */
 332:Core/Src/main.c **** void Error_Handler(void)
 333:Core/Src/main.c **** {
 672              		.loc 1 333 1 is_stmt 1 view -0
 673              		.cfi_startproc
 674              		@ Volatile: function does not return.
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 334:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 335:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 336:Core/Src/main.c ****   __disable_irq();
 678              		.loc 1 336 3 view .LVU149
 679              	.LBB12:
 680              	.LBI12:
 681              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 20


  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 21


  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 22


 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 23


 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 24


 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 25


 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 26


 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 27


 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 28


 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 29


 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 30


 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 31


 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 32


 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 33


 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 34


 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 35


 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 36


 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 682              		.loc 2 960 27 view .LVU150
 683              	.LBB13:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 684              		.loc 2 962 3 view .LVU151
 685              		.syntax unified
 686              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 687 0000 72B6     		cpsid i
 688              	@ 0 "" 2
 689              		.thumb
 690              		.syntax unified
 691              	.L30:
 692              	.LBE13:
 693              	.LBE12:
 337:Core/Src/main.c ****   while (1)
 694              		.loc 1 337 3 view .LVU152
 338:Core/Src/main.c ****   {
 339:Core/Src/main.c ****   }
 695              		.loc 1 339 3 view .LVU153
 337:Core/Src/main.c ****   while (1)
 696              		.loc 1 337 9 view .LVU154
 697 0002 FEE7     		b	.L30
 698              		.cfi_endproc
 699              	.LFE147:
 701              		.section	.text.UART1_Init,"ax",%progbits
 702              		.align	1
 703              		.syntax unified
 704              		.thumb
 705              		.thumb_func
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 37


 707              	UART1_Init:
 708              	.LFB146:
 292:Core/Src/main.c ****     // Enable clocks
 709              		.loc 1 292 1 view -0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 32
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713 0000 10B5     		push	{r4, lr}
 714              		.cfi_def_cfa_offset 8
 715              		.cfi_offset 4, -8
 716              		.cfi_offset 14, -4
 717 0002 88B0     		sub	sp, sp, #32
 718              		.cfi_def_cfa_offset 40
 294:Core/Src/main.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 719              		.loc 1 294 5 view .LVU156
 720              	.LBB14:
 294:Core/Src/main.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 721              		.loc 1 294 5 view .LVU157
 722 0004 0024     		movs	r4, #0
 723 0006 0194     		str	r4, [sp, #4]
 294:Core/Src/main.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 724              		.loc 1 294 5 view .LVU158
 725 0008 1C4B     		ldr	r3, .L35
 726 000a 5A6C     		ldr	r2, [r3, #68]
 727 000c 42F01002 		orr	r2, r2, #16
 728 0010 5A64     		str	r2, [r3, #68]
 294:Core/Src/main.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 729              		.loc 1 294 5 view .LVU159
 730 0012 5A6C     		ldr	r2, [r3, #68]
 731 0014 02F01002 		and	r2, r2, #16
 732 0018 0192     		str	r2, [sp, #4]
 294:Core/Src/main.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 733              		.loc 1 294 5 view .LVU160
 734 001a 019A     		ldr	r2, [sp, #4]
 735              	.LBE14:
 294:Core/Src/main.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 736              		.loc 1 294 5 view .LVU161
 295:Core/Src/main.c ****     
 737              		.loc 1 295 5 view .LVU162
 738              	.LBB15:
 295:Core/Src/main.c ****     
 739              		.loc 1 295 5 view .LVU163
 740 001c 0294     		str	r4, [sp, #8]
 295:Core/Src/main.c ****     
 741              		.loc 1 295 5 view .LVU164
 742 001e 1A6B     		ldr	r2, [r3, #48]
 743 0020 42F00102 		orr	r2, r2, #1
 744 0024 1A63     		str	r2, [r3, #48]
 295:Core/Src/main.c ****     
 745              		.loc 1 295 5 view .LVU165
 746 0026 1B6B     		ldr	r3, [r3, #48]
 747 0028 03F00103 		and	r3, r3, #1
 748 002c 0293     		str	r3, [sp, #8]
 295:Core/Src/main.c ****     
 749              		.loc 1 295 5 view .LVU166
 750 002e 029B     		ldr	r3, [sp, #8]
 751              	.LBE15:
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 38


 295:Core/Src/main.c ****     
 752              		.loc 1 295 5 view .LVU167
 298:Core/Src/main.c ****     
 753              		.loc 1 298 5 view .LVU168
 298:Core/Src/main.c ****     
 754              		.loc 1 298 22 is_stmt 0 view .LVU169
 755 0030 03A9     		add	r1, sp, #12
 756 0032 0394     		str	r4, [sp, #12]
 757 0034 4C60     		str	r4, [r1, #4]
 758 0036 8C60     		str	r4, [r1, #8]
 759 0038 CC60     		str	r4, [r1, #12]
 760 003a 0C61     		str	r4, [r1, #16]
 302:Core/Src/main.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 761              		.loc 1 302 5 is_stmt 1 view .LVU170
 302:Core/Src/main.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 762              		.loc 1 302 25 is_stmt 0 view .LVU171
 763 003c 4FF4C063 		mov	r3, #1536
 764 0040 0393     		str	r3, [sp, #12]
 303:Core/Src/main.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 765              		.loc 1 303 5 is_stmt 1 view .LVU172
 303:Core/Src/main.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 766              		.loc 1 303 26 is_stmt 0 view .LVU173
 767 0042 0223     		movs	r3, #2
 768 0044 0493     		str	r3, [sp, #16]
 304:Core/Src/main.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 769              		.loc 1 304 5 is_stmt 1 view .LVU174
 305:Core/Src/main.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 770              		.loc 1 305 5 view .LVU175
 305:Core/Src/main.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 771              		.loc 1 305 27 is_stmt 0 view .LVU176
 772 0046 0323     		movs	r3, #3
 773 0048 0693     		str	r3, [sp, #24]
 306:Core/Src/main.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 774              		.loc 1 306 5 is_stmt 1 view .LVU177
 306:Core/Src/main.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 775              		.loc 1 306 31 is_stmt 0 view .LVU178
 776 004a 0723     		movs	r3, #7
 777 004c 0793     		str	r3, [sp, #28]
 307:Core/Src/main.c ****     
 778              		.loc 1 307 5 is_stmt 1 view .LVU179
 779 004e 0C48     		ldr	r0, .L35+4
 780 0050 FFF7FEFF 		bl	HAL_GPIO_Init
 781              	.LVL43:
 310:Core/Src/main.c ****     huart1.Init.BaudRate = 115200;
 782              		.loc 1 310 5 view .LVU180
 310:Core/Src/main.c ****     huart1.Init.BaudRate = 115200;
 783              		.loc 1 310 21 is_stmt 0 view .LVU181
 784 0054 0B48     		ldr	r0, .L35+8
 785 0056 0C4B     		ldr	r3, .L35+12
 786 0058 0360     		str	r3, [r0]
 311:Core/Src/main.c ****     huart1.Init.WordLength = UART_WORDLENGTH_8B;
 787              		.loc 1 311 5 is_stmt 1 view .LVU182
 311:Core/Src/main.c ****     huart1.Init.WordLength = UART_WORDLENGTH_8B;
 788              		.loc 1 311 26 is_stmt 0 view .LVU183
 789 005a 4FF4E133 		mov	r3, #115200
 790 005e 4360     		str	r3, [r0, #4]
 312:Core/Src/main.c ****     huart1.Init.StopBits = UART_STOPBITS_1;
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 39


 791              		.loc 1 312 5 is_stmt 1 view .LVU184
 312:Core/Src/main.c ****     huart1.Init.StopBits = UART_STOPBITS_1;
 792              		.loc 1 312 28 is_stmt 0 view .LVU185
 793 0060 8460     		str	r4, [r0, #8]
 313:Core/Src/main.c ****     huart1.Init.Parity = UART_PARITY_NONE;
 794              		.loc 1 313 5 is_stmt 1 view .LVU186
 313:Core/Src/main.c ****     huart1.Init.Parity = UART_PARITY_NONE;
 795              		.loc 1 313 26 is_stmt 0 view .LVU187
 796 0062 C460     		str	r4, [r0, #12]
 314:Core/Src/main.c ****     huart1.Init.Mode = UART_MODE_TX_RX;
 797              		.loc 1 314 5 is_stmt 1 view .LVU188
 314:Core/Src/main.c ****     huart1.Init.Mode = UART_MODE_TX_RX;
 798              		.loc 1 314 24 is_stmt 0 view .LVU189
 799 0064 0461     		str	r4, [r0, #16]
 315:Core/Src/main.c ****     huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800              		.loc 1 315 5 is_stmt 1 view .LVU190
 315:Core/Src/main.c ****     huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 801              		.loc 1 315 22 is_stmt 0 view .LVU191
 802 0066 0C23     		movs	r3, #12
 803 0068 4361     		str	r3, [r0, #20]
 316:Core/Src/main.c ****     huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 804              		.loc 1 316 5 is_stmt 1 view .LVU192
 316:Core/Src/main.c ****     huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 805              		.loc 1 316 27 is_stmt 0 view .LVU193
 806 006a 8461     		str	r4, [r0, #24]
 317:Core/Src/main.c ****     
 807              		.loc 1 317 5 is_stmt 1 view .LVU194
 317:Core/Src/main.c ****     
 808              		.loc 1 317 30 is_stmt 0 view .LVU195
 809 006c C461     		str	r4, [r0, #28]
 319:Core/Src/main.c ****     {
 810              		.loc 1 319 5 is_stmt 1 view .LVU196
 319:Core/Src/main.c ****     {
 811              		.loc 1 319 9 is_stmt 0 view .LVU197
 812 006e FFF7FEFF 		bl	HAL_UART_Init
 813              	.LVL44:
 319:Core/Src/main.c ****     {
 814              		.loc 1 319 8 discriminator 1 view .LVU198
 815 0072 08B9     		cbnz	r0, .L34
 324:Core/Src/main.c **** 
 816              		.loc 1 324 1 view .LVU199
 817 0074 08B0     		add	sp, sp, #32
 818              		.cfi_remember_state
 819              		.cfi_def_cfa_offset 8
 820              		@ sp needed
 821 0076 10BD     		pop	{r4, pc}
 822              	.L34:
 823              		.cfi_restore_state
 322:Core/Src/main.c ****     }
 824              		.loc 1 322 9 is_stmt 1 view .LVU200
 825 0078 FFF7FEFF 		bl	Error_Handler
 826              	.LVL45:
 827              	.L36:
 828              		.align	2
 829              	.L35:
 830 007c 00380240 		.word	1073887232
 831 0080 00000240 		.word	1073872896
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 40


 832 0084 00000000 		.word	huart1
 833 0088 00100140 		.word	1073811456
 834              		.cfi_endproc
 835              	.LFE146:
 837              		.section	.text.SystemClock_Config,"ax",%progbits
 838              		.align	1
 839              		.global	SystemClock_Config
 840              		.syntax unified
 841              		.thumb
 842              		.thumb_func
 844              	SystemClock_Config:
 845              	.LFB138:
  93:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 846              		.loc 1 93 1 view -0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 80
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850 0000 10B5     		push	{r4, lr}
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 4, -8
 853              		.cfi_offset 14, -4
 854 0002 94B0     		sub	sp, sp, #80
 855              		.cfi_def_cfa_offset 88
  94:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 856              		.loc 1 94 3 view .LVU202
  94:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 857              		.loc 1 94 22 is_stmt 0 view .LVU203
 858 0004 07AC     		add	r4, sp, #28
 859 0006 3422     		movs	r2, #52
 860 0008 0021     		movs	r1, #0
 861 000a 2046     		mov	r0, r4
 862 000c FFF7FEFF 		bl	memset
 863              	.LVL46:
  95:Core/Src/main.c **** 
 864              		.loc 1 95 3 is_stmt 1 view .LVU204
  95:Core/Src/main.c **** 
 865              		.loc 1 95 22 is_stmt 0 view .LVU205
 866 0010 0023     		movs	r3, #0
 867 0012 0293     		str	r3, [sp, #8]
 868 0014 0393     		str	r3, [sp, #12]
 869 0016 0493     		str	r3, [sp, #16]
 870 0018 0593     		str	r3, [sp, #20]
 871 001a 0693     		str	r3, [sp, #24]
  99:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 872              		.loc 1 99 3 is_stmt 1 view .LVU206
 873              	.LBB16:
  99:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 874              		.loc 1 99 3 view .LVU207
 875 001c 0093     		str	r3, [sp]
  99:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 876              		.loc 1 99 3 view .LVU208
 877 001e 194A     		ldr	r2, .L43
 878 0020 116C     		ldr	r1, [r2, #64]
 879 0022 41F08051 		orr	r1, r1, #268435456
 880 0026 1164     		str	r1, [r2, #64]
  99:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 881              		.loc 1 99 3 view .LVU209
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 41


 882 0028 126C     		ldr	r2, [r2, #64]
 883 002a 02F08052 		and	r2, r2, #268435456
 884 002e 0092     		str	r2, [sp]
  99:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 885              		.loc 1 99 3 view .LVU210
 886 0030 009A     		ldr	r2, [sp]
 887              	.LBE16:
  99:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 888              		.loc 1 99 3 view .LVU211
 100:Core/Src/main.c **** 
 889              		.loc 1 100 3 view .LVU212
 890              	.LBB17:
 100:Core/Src/main.c **** 
 891              		.loc 1 100 3 view .LVU213
 892 0032 0193     		str	r3, [sp, #4]
 100:Core/Src/main.c **** 
 893              		.loc 1 100 3 view .LVU214
 894 0034 1449     		ldr	r1, .L43+4
 895 0036 0A68     		ldr	r2, [r1]
 896 0038 22F44042 		bic	r2, r2, #49152
 897 003c 42F48042 		orr	r2, r2, #16384
 898 0040 0A60     		str	r2, [r1]
 100:Core/Src/main.c **** 
 899              		.loc 1 100 3 view .LVU215
 900 0042 0A68     		ldr	r2, [r1]
 901 0044 02F44042 		and	r2, r2, #49152
 902 0048 0192     		str	r2, [sp, #4]
 100:Core/Src/main.c **** 
 903              		.loc 1 100 3 view .LVU216
 904 004a 019A     		ldr	r2, [sp, #4]
 905              	.LBE17:
 100:Core/Src/main.c **** 
 906              		.loc 1 100 3 view .LVU217
 105:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 907              		.loc 1 105 3 view .LVU218
 105:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 908              		.loc 1 105 36 is_stmt 0 view .LVU219
 909 004c 0222     		movs	r2, #2
 910 004e 0792     		str	r2, [sp, #28]
 106:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 911              		.loc 1 106 3 is_stmt 1 view .LVU220
 106:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 912              		.loc 1 106 30 is_stmt 0 view .LVU221
 913 0050 0122     		movs	r2, #1
 914 0052 0A92     		str	r2, [sp, #40]
 107:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 915              		.loc 1 107 3 is_stmt 1 view .LVU222
 107:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 916              		.loc 1 107 41 is_stmt 0 view .LVU223
 917 0054 1022     		movs	r2, #16
 918 0056 0B92     		str	r2, [sp, #44]
 108:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 919              		.loc 1 108 3 is_stmt 1 view .LVU224
 108:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 920              		.loc 1 108 34 is_stmt 0 view .LVU225
 921 0058 0D93     		str	r3, [sp, #52]
 109:Core/Src/main.c ****   {
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 42


 922              		.loc 1 109 3 is_stmt 1 view .LVU226
 109:Core/Src/main.c ****   {
 923              		.loc 1 109 7 is_stmt 0 view .LVU227
 924 005a 2046     		mov	r0, r4
 925 005c FFF7FEFF 		bl	HAL_RCC_OscConfig
 926              	.LVL47:
 109:Core/Src/main.c ****   {
 927              		.loc 1 109 6 discriminator 1 view .LVU228
 928 0060 60B9     		cbnz	r0, .L41
 116:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 929              		.loc 1 116 3 is_stmt 1 view .LVU229
 116:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 930              		.loc 1 116 31 is_stmt 0 view .LVU230
 931 0062 0F23     		movs	r3, #15
 932 0064 0293     		str	r3, [sp, #8]
 118:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 933              		.loc 1 118 3 is_stmt 1 view .LVU231
 118:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 934              		.loc 1 118 34 is_stmt 0 view .LVU232
 935 0066 0021     		movs	r1, #0
 936 0068 0391     		str	r1, [sp, #12]
 119:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 937              		.loc 1 119 3 is_stmt 1 view .LVU233
 119:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 938              		.loc 1 119 35 is_stmt 0 view .LVU234
 939 006a 0491     		str	r1, [sp, #16]
 120:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 940              		.loc 1 120 3 is_stmt 1 view .LVU235
 120:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 941              		.loc 1 120 36 is_stmt 0 view .LVU236
 942 006c 0591     		str	r1, [sp, #20]
 121:Core/Src/main.c **** 
 943              		.loc 1 121 3 is_stmt 1 view .LVU237
 121:Core/Src/main.c **** 
 944              		.loc 1 121 36 is_stmt 0 view .LVU238
 945 006e 0691     		str	r1, [sp, #24]
 123:Core/Src/main.c ****   {
 946              		.loc 1 123 3 is_stmt 1 view .LVU239
 123:Core/Src/main.c ****   {
 947              		.loc 1 123 7 is_stmt 0 view .LVU240
 948 0070 02A8     		add	r0, sp, #8
 949 0072 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 950              	.LVL48:
 123:Core/Src/main.c ****   {
 951              		.loc 1 123 6 discriminator 1 view .LVU241
 952 0076 18B9     		cbnz	r0, .L42
 127:Core/Src/main.c **** 
 953              		.loc 1 127 1 view .LVU242
 954 0078 14B0     		add	sp, sp, #80
 955              		.cfi_remember_state
 956              		.cfi_def_cfa_offset 8
 957              		@ sp needed
 958 007a 10BD     		pop	{r4, pc}
 959              	.L41:
 960              		.cfi_restore_state
 111:Core/Src/main.c ****   }
 961              		.loc 1 111 5 is_stmt 1 view .LVU243
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 43


 962 007c FFF7FEFF 		bl	Error_Handler
 963              	.LVL49:
 964              	.L42:
 125:Core/Src/main.c ****   }
 965              		.loc 1 125 5 view .LVU244
 966 0080 FFF7FEFF 		bl	Error_Handler
 967              	.LVL50:
 968              	.L44:
 969              		.align	2
 970              	.L43:
 971 0084 00380240 		.word	1073887232
 972 0088 00700040 		.word	1073770496
 973              		.cfi_endproc
 974              	.LFE138:
 976              		.section	.text.main,"ax",%progbits
 977              		.align	1
 978              		.global	main
 979              		.syntax unified
 980              		.thumb
 981              		.thumb_func
 983              	main:
 984              	.LFB137:
  65:Core/Src/main.c **** 
 985              		.loc 1 65 1 view -0
 986              		.cfi_startproc
 987              		@ Volatile: function does not return.
 988              		@ args = 0, pretend = 0, frame = 0
 989              		@ frame_needed = 0, uses_anonymous_args = 0
 990 0000 08B5     		push	{r3, lr}
 991              		.cfi_def_cfa_offset 8
 992              		.cfi_offset 3, -8
 993              		.cfi_offset 14, -4
  68:Core/Src/main.c **** 
 994              		.loc 1 68 3 view .LVU246
 995 0002 FFF7FEFF 		bl	HAL_Init
 996              	.LVL51:
  70:Core/Src/main.c **** 
 997              		.loc 1 70 3 view .LVU247
 998 0006 FFF7FEFF 		bl	SystemClock_Config
 999              	.LVL52:
  72:Core/Src/main.c ****   MX_DMA_Init();
 1000              		.loc 1 72 3 view .LVU248
 1001 000a FFF7FEFF 		bl	MX_GPIO_Init
 1002              	.LVL53:
  73:Core/Src/main.c ****   UART1_Init();
 1003              		.loc 1 73 3 view .LVU249
 1004 000e FFF7FEFF 		bl	MX_DMA_Init
 1005              	.LVL54:
  74:Core/Src/main.c **** 
 1006              		.loc 1 74 3 view .LVU250
 1007 0012 FFF7FEFF 		bl	UART1_Init
 1008              	.LVL55:
  76:Core/Src/main.c ****   lcd_command(CLEAR);
 1009              		.loc 1 76 3 view .LVU251
 1010 0016 FFF7FEFF 		bl	init_LCD
 1011              	.LVL56:
  77:Core/Src/main.c **** 
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 44


 1012              		.loc 1 77 3 view .LVU252
 1013 001a 0120     		movs	r0, #1
 1014 001c FFF7FEFF 		bl	lcd_command
 1015              	.LVL57:
 1016              	.L46:
  80:Core/Src/main.c ****   {
 1017              		.loc 1 80 3 view .LVU253
  84:Core/Src/main.c **** 
 1018              		.loc 1 84 3 view .LVU254
  80:Core/Src/main.c ****   {
 1019              		.loc 1 80 9 view .LVU255
 1020 0020 FEE7     		b	.L46
 1021              		.cfi_endproc
 1022              	.LFE137:
 1024              		.global	lastInterruptTime
 1025              		.section	.bss.lastInterruptTime,"aw",%nobits
 1026              		.align	2
 1029              	lastInterruptTime:
 1030 0000 00000000 		.space	16
 1030      00000000 
 1030      00000000 
 1030      00000000 
 1031              		.global	huart1
 1032              		.section	.bss.huart1,"aw",%nobits
 1033              		.align	2
 1036              	huart1:
 1037 0000 00000000 		.space	72
 1037      00000000 
 1037      00000000 
 1037      00000000 
 1037      00000000 
 1038              		.global	hdma_tim2_ch1
 1039              		.section	.bss.hdma_tim2_ch1,"aw",%nobits
 1040              		.align	2
 1043              	hdma_tim2_ch1:
 1044 0000 00000000 		.space	96
 1044      00000000 
 1044      00000000 
 1044      00000000 
 1044      00000000 
 1045              		.global	htim3
 1046              		.section	.bss.htim3,"aw",%nobits
 1047              		.align	2
 1050              	htim3:
 1051 0000 00000000 		.space	72
 1051      00000000 
 1051      00000000 
 1051      00000000 
 1051      00000000 
 1052              		.global	htim2
 1053              		.section	.bss.htim2,"aw",%nobits
 1054              		.align	2
 1057              	htim2:
 1058 0000 00000000 		.space	72
 1058      00000000 
 1058      00000000 
 1058      00000000 
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 45


 1058      00000000 
 1059              		.text
 1060              	.Letext0:
 1061              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1062              		.file 4 "C:/Users/P Ngubo/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-
 1063              		.file 5 "C:/Users/P Ngubo/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-
 1064              		.file 6 "C:/Users/P Ngubo/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-
 1065              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1066              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1067              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1068              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1069              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1070              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1071              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 1072              		.file 14 "C:/Users/P Ngubo/AppData/Roaming/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev
 1073              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1074              		.file 16 "Core/Inc/lcd_stm32f4.h"
 1075              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1076              		.file 18 "<built-in>"
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 46


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:21     .text.MX_GPIO_Init:00000000 $t
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:26     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:256    .text.MX_GPIO_Init:0000013c $d
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:264    .text.MX_DMA_Init:00000000 $t
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:269    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:315    .text.MX_DMA_Init:00000030 $d
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:320    .text.EXTI0_IRQHandler:00000000 $t
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:326    .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:346    .text.EXTI1_IRQHandler:00000000 $t
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:352    .text.EXTI1_IRQHandler:00000000 EXTI1_IRQHandler
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:372    .text.EXTI2_IRQHandler:00000000 $t
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:378    .text.EXTI2_IRQHandler:00000000 EXTI2_IRQHandler
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:398    .text.EXTI3_IRQHandler:00000000 $t
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:404    .text.EXTI3_IRQHandler:00000000 EXTI3_IRQHandler
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:424    .rodata.HAL_GPIO_EXTI_Callback.str1.4:00000000 $d
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:437    .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:443    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:468    .text.HAL_GPIO_EXTI_Callback:00000014 $d
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:476    .text.HAL_GPIO_EXTI_Callback:0000001c $t
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:654    .text.HAL_GPIO_EXTI_Callback:000000f8 $d
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:1029   .bss.lastInterruptTime:00000000 lastInterruptTime
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:1036   .bss.huart1:00000000 huart1
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:664    .text.Error_Handler:00000000 $t
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:670    .text.Error_Handler:00000000 Error_Handler
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:702    .text.UART1_Init:00000000 $t
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:707    .text.UART1_Init:00000000 UART1_Init
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:830    .text.UART1_Init:0000007c $d
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:838    .text.SystemClock_Config:00000000 $t
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:844    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:971    .text.SystemClock_Config:00000084 $d
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:977    .text.main:00000000 $t
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:983    .text.main:00000000 main
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:1026   .bss.lastInterruptTime:00000000 $d
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:1033   .bss.huart1:00000000 $d
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:1043   .bss.hdma_tim2_ch1:00000000 hdma_tim2_ch1
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:1040   .bss.hdma_tim2_ch1:00000000 $d
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:1050   .bss.htim3:00000000 htim3
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:1047   .bss.htim3:00000000 $d
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:1057   .bss.htim2:00000000 htim2
C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s:1054   .bss.htim2:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_GPIO_WritePin
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_EXTI_IRQHandler
HAL_GetTick
strlen
HAL_UART_Transmit
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
ARM GAS  C:\Users\PNGUBO~1\AppData\Local\Temp\ccA7gK03.s 			page 47


init_LCD
lcd_command
